pipeline {
    agent any

    environment {
        DOCKER_HOST_URL = 'http://162.0.214.98:2375'
        IMAGE_NAME = 'giap/frontend'
        CONTAINER_NAME = 'frontend.giap.local'
        GIT_REPO = 'https://github.com/erenkarakoc/genc-is-adamlari-platformu.git'
    }

    stages {
        stage('Son Kodları Al') {
            steps {
                sh 'rm -rf genc-is-adamlari-platformu'
                sh 'git clone ${GIT_REPO}'
                sh 'cd genc-is-adamlari-platformu && git checkout main'
            }
        }

        stage('İmaj Dosyasını Oluştur') {
            steps {
                dir('genc-is-adamlari-platformu/frontend') {
                    sh "curl -X POST -H 'Content-Type: application/json' -d '{\"context\": \".\", \"tag\": \"${IMAGE_NAME}\"}' ${DOCKER_HOST_URL}/build"
                }
            }
        }

        stage('Mevcut Uygulamayı Sil') {
            steps {
                script {
                    def containerExists = sh(script: "curl -s ${DOCKER_HOST_URL}/containers/${CONTAINER_NAME}/json | grep -o '\"Id\":\"[^\"]*\"' | sed 's/\"Id\":\"//g' | sed 's/\"//g'", returnStdout: true).trim()
                    if (containerExists) {
                        sh "curl -X DELETE ${DOCKER_HOST_URL}/containers/${CONTAINER_NAME}?force=true"
                    }
                }
            }
        }

        stage('Yeni Uygulama Başlat') {
            steps {
                sh "curl -X POST -H 'Content-Type: application/json' -d '{\"Image\": \"${IMAGE_NAME}\"}' ${DOCKER_HOST_URL}/containers/create?name=${CONTAINER_NAME}"
                sh "curl -X POST ${DOCKER_HOST_URL}/containers/${CONTAINER_NAME}/start"
            }
        }
    }

    post {
        always {
            echo 'İşlemler başarılı bir şekilde tamamlandı!'
        }
    }
}
